#!/usr/bin/env node
var Glug,Logdown,Promise,base_path,bs,commands,config,config_path,files,generate_file_list,glug,input_dir,load_all_transformers,load_config,load_transformer,output_dir,paths,pipelines,prepare_output_dir,render,render_all,render_all_in_tier,render_file_tier,render_pipeline,require_dependencies,start_browser_sync,start_config_watcher,start_watcher,transformer_names,transformers;base_path=process.cwd();require("app-module-path").addPath(base_path+"/node_modules");Promise=require("bluebird");Logdown=require("logdown");global.program=require("commander");global.l=new Logdown({prefix:"glug",alignOutput:true});l.debug=function(){if(global.verbose){return l.log.apply(l,arguments)}};require_dependencies=function(){l.debug("requiring dependencies");return new Promise(function(e,r){require("coffee-script/register");global.h=require("./helpers");global.fs=require("fs");global.path=require("path");global.mkdirp=require("mkdirp");global.chokidar=require("chokidar");global.jstransformer=require("jstransformer");global.recursive=require("fs-readdir-recursive");global.anymatch=require("anymatch");global.matter=require("gray-matter");global.browser_sync=require("browser-sync");return e()})};config=void 0;config_path=void 0;bs=void 0;transformer_names=void 0;transformers=void 0;input_dir=void 0;output_dir=void 0;paths={};files={};pipelines={};load_config=function(){return new Promise(function(e,r){var n;input_dir=(config!=null?config.input_dir:void 0)||"app";output_dir=(config!=null?config.output_dir:void 0)||"public";config_path=base_path+"/glug-config.coffee";try{config=require(config_path)}catch(e){n=e;throw n+("\nConfig file not found at "+config_path)}return e()})};start_browser_sync=function(){bs=browser_sync.create();return bs.init(h.merge({server:output_dir},config.server))};load_transformer=function(e){return new Promise(function(r,n){var t;l.debug("Requiring JSTransformer: **"+e+"**");try{transformers[e]=jstransformer(require("jstransformer-"+e));return r()}catch(r){t=r;return n(l.error((t+"\n    \nTry running `npm install --save jstransformer-"+e+"`\nor `yarn add jstransformer-"+e+"`").replace("Error: ","")))}})};load_all_transformers=function(){transformer_names=config.transformers;transformers={};return Promise.map(h.to_array(transformer_names),function(e){return load_transformer(e.name)})};generate_file_list=function(){return new Promise(function(e,r){var n,t,i,o,a,s,u,f,d,c,p,m,_,g,b,v,w;l.debug("Making file list...");n=recursive(input_dir);for(d=0,p=n.length;d<p;d++){s=n[d];files[s]={};files[s].is_rendered=false;files[s].in_format=path.extname(s).replace(".","");g=config.pipelines;for(_ in g){m=g[_];for(v in m){b=m[v];for(f in b){w=b[f];if(anymatch(f,s)){if(typeof w==="string"){w=[w]}if(w.length===0){w=["copy"];(t=files[s]).out_format||(t.out_format=files[s].in_format)}else{c=transformers[h.last(w).data];files[s].out_format=c.outputFormat}files[s].pipeline=_;pipelines[_]||(pipelines[_]={});(i=pipelines[_])[v]||(i[v]={});(o=pipelines[_][v])[s]||(o[s]={});u=pipelines[_][v][s];u.transforms||(u.transforms=[]);u.transforms=u.transforms.concat(w)}}}}(a=files[s]).out_format||(a.out_format=files[s].in_format);files[s].out_path=s.replace(files[s].in_format,files[s].out_format)}l.debug("Files: "+h.json(files));l.debug("Pipelines: "+h.json(pipelines));l.debug("File list is finished");return e()})};prepare_output_dir=function(){return new Promise(function(e,r){var n;try{h.rm_dir(output_dir);if(!fs.existsSync(output_dir)){fs.mkdir(output_dir)}return e()}catch(e){n=e;return r(n)}})};start_config_watcher=function(){return chokidar.watch(config_path).on("change",function(){return load_config().then(prepare_output_dir).then(load_all_transformers).then(generate_file_list).then(render_all).then(bs.reload("*"))})};start_watcher=function(){return chokidar.watch(input_dir,{}).on("all",function(e,r){var n,t;if(e==="change"||e==="remove"){r=r.replace(input_dir+"/","");t=files[r].pipeline;n=t.toLowerCase();l.debug(r+" "+e+"d");files[r].is_rendered=false;l.debug("Pipeline to reload is "+t);return render_pipeline({name:t,data:pipelines[t]}).then(function(){return bs.reload("*."+n)})}})};render=function(e,r,n,t){if(t==null){t={}}l.debug("Rendering **"+e.name+"** with `"+n+"`.");return new Promise(function(i,o){var a,s,u,f,d,c;a=["",void 0,null];if(a.includes(r)){h.warn("I want to render "+e.name+" with "+n+", but I can't because "+e.name+" is "+r);return i("")}if(typeof r!=="string"){h.warn("The contents of "+e.name+" is of type "+typeof r+", and is: "+h.json(r))}s=matter(r);r=s.content;u=s.data;if(n==="copy"){return i(r)}d=transformers[n];f=d.outputFormat;c=h.merge(t,u,config.transformers[d.name]);l.debug(h.json(c));return d.renderAsync(r,c).then(function(r){l.debug(e.name+": finished rendering with "+d.name);return i(r.body)})["catch"](function(e){throw e})})};render_file_tier=function(e,r,n){if(n==null){n=true}l.debug(e.name+": "+r.name);return new Promise(function(t,i){var o,a,s;o=files[e.name];s=path.join(output_dir,o.out_path);if(n){a=path.join(input_dir,e.name)}else{a=s}l.debug("Looking for file at "+a);return fs.readFile(a,{encoding:"utf8"},function(n,i){var o;if(n){throw l.error(n)}l.debug("Found file "+a);o=r.data[e.name].transforms;return Promise.reduce(o,function(r,n){return render(e,r,n,{filename:a,basedir:output_dir})["catch"](function(e){throw e})},i)["catch"](function(e){throw e}).then(function(e){h.write_file(s,e);return t()})})})};render_all_in_tier=function(e,r,n){if(n==null){n=true}l.debug(e.name+": "+r.name);return Promise.map(h.to_array(r.data),function(e){if(!files[e.name].is_rendered){return render_file_tier(e,r,n)}})};render_pipeline=function(e){l.debug("**"+e.name+" Pipeline**");return Promise.reduce(h.to_array(e.data),function(r,n,t){var i,o;i=t===0?true:false;l.debug("Rendering tier "+(t+1)+" - **"+n.name+"** for `"+e.name+"`");o=render_all_in_tier(e,n,i);o.then(function(){return l.debug("Finished tier: "+n.name)});return o},0)};render_all=function(){return Promise.map(h.to_array(pipelines),function(e){return render_pipeline(e)})};commands={init:program.command("init <directory>"),watch:program.command("watch [directory]"),build:program.command("build [directory]")};Glug=function(){function e(){}e.prototype.init=function(e){var r,n,t,i,o,a,s;global.verbose=commands.init.verbose;l.log("init",verbose?"`verbose`":void 0);l.info("directory is "+e);r=require("sprout");o=require("path");i=require("os");t=require("mkdirp");n=require("inquirer");s=o.join(i.homedir(),".config/glug");t.sync(s);a=new r(s);l.debug(h.json(a.templates));return a.add("glug","https://github.com/glugjs/sprout-glug").then(function(){return a.init("glug",e,{questionnaire:n.prompt.bind(n)})})};e.prototype.watch=function(){global.verbose=commands.watch.verbose;l.log("watch",verbose?"`verbose`":void 0);return require_dependencies().then(load_config).then(start_config_watcher).then(start_browser_sync).then(load_all_transformers).then(generate_file_list).then(prepare_output_dir).then(start_watcher).then(render_all)["catch"](function(e){throw e})};e.prototype.build=function(){global.verbose=commands.build.verbose;l.log("build",verbose?"`verbose`":void 0);return require_dependencies().then(load_config).then(load_all_transformers).then(generate_file_list).then(prepare_output_dir).then(render_all)["catch"](function(e){throw e})};return e}();glug=new Glug;commands.init.description("set up a new project").option("-v, --verbose","print more output").alias("new").action(glug.init);commands.watch.description("start a server").option("-v, --verbose","print more output").alias("server").action(glug.watch);commands.build.description("build the project").option("-v, --verbose","print more output").alias("compile").action(glug.build);program.version("0.0.10").parse(process.argv);if(!process.argv.slice(2).length){program.outputHelp()}module.exports=glug;
